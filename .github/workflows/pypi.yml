# .github/workflows/pypi.yml

name: Publish Python distributions to PyPI

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.2.3
  workflow_dispatch:

jobs:
  build:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU for multi-architecture builds on Linux
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          # Explicitly set the Python versions to build
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
          # Skip PyPy and 32-bit builds on Linux
          CIBW_SKIP: "pp* cp3?-manylinux_i686 *win32 *i386"
          # Build for aarch64 on Linux using QEMU
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          # Build for both x86_64 and arm64 (Apple Silicon) on macOS
          CIBW_ARCHS_MACOS: "auto arm64"
          # Pre-install large dependencies to speed up build
          CIBW_BEFORE_BUILD: "pip install numpy scikit-image"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"

      - name: Store built wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install build dependencies
        run: python -m pip install build

      - name: Build sdist
        run: python -m build --sdist

      - name: Store sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  publish:
    name: Publish to PyPI
    needs: [build, build_sdist]
    runs-on: ubuntu-latest
    # Publish only when a tag is pushed
    if: startsWith(github.ref, 'refs/tags/')
    # Use trusted publishing
    environment:
      name: pypi
      url: https://pypi.org/p/koba
    permissions:
      id-token: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          # The pattern needs to match the names of the artifacts uploaded in the build jobs
          pattern: wheels-*
          path: dist/
          merge-multiple: true

      - name: Download sdist artifact
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/

      #- name: Publish package to PyPI
      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  uses: pypa/gh-action-pypi-publish@release/v1